workflows:
  build-android:
    name: Build Android (.apk) and Publish to GitHub
    max_build_duration: 60
    instance_type: mac_mini_m2
    environment:
      vars:
        DOTNET_CHANNEL: "8.0"
        DOTNET_PATH: "$HOME/.dotnet"
        DOTNET: "$HOME/.dotnet/dotnet"
    scripts:
      - name: Install .NET SDK and MAUI workloads
        script: |
          echo "Installing .NET $DOTNET_CHANNEL via dotnet-install.sh into $DOTNET_PATH"
          mkdir -p $DOTNET_PATH
          curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin --channel $DOTNET_CHANNEL --install-dir $DOTNET_PATH
          $DOTNET --info
          echo "Installing MAUI workloads"
          $DOTNET workload install maui --skip-manifest-update
      - name: Accept Android SDK licenses
        script: |
          yes | sdkmanager --licenses || true
      - name: Restore dependencies
        script: |
          $DOTNET restore
      - name: Build Android Release
        script: |
          $DOTNET build ./HelloMaui.csproj -f net8.0-android -c Release -o ./publish
      - name: List publish folder contents
        script: |
          ls -R ./publish
      - name: Publish to GitHub Release
        script: |
          echo "Debug: CM_TAG='${CM_TAG}' CM_BRANCH='${CM_BRANCH}' CM_BUILD_TRIGGER='${CM_BUILD_TRIGGER}'"

          # If CM_TAG is not set, try to detect a tag that points at HEAD (fallback)
          if [ -z "${CM_TAG}" ]; then
            echo "CM_TAG is empty, attempting to detect tag via git"
            git fetch --tags || true
            TAG=$(git tag --points-at HEAD 2>/dev/null || true)
            if [ -z "$TAG" ]; then
              TAG=$(git describe --tags --exact-match 2>/dev/null || true)
            fi
            if [ -n "$TAG" ]; then
              export CM_TAG="$TAG"
              echo "Detected tag: $CM_TAG"
            else
              echo "Not a tag build and no tag detected. Skipping GitHub release"
              exit 0
            fi
          fi

          if [ -z "${GITHUB_TOKEN}" ]; then
            echo "GITHUB_TOKEN not set in environment. Cannot create release. Skipping."
            exit 0
          fi

          echo "${GITHUB_TOKEN}" > token.txt
          gh auth login --with-token < token.txt
          gh release create "${CM_TAG}" \
            --title "Release ${CM_TAG}" \
            --notes "Automated release from Codemagic" \
            ./publish/*.apk

artifacts:
  - publish/**/*.apk

triggering:
  events:
    - tag
  branch_patterns:
    - pattern: "*"
      include: true
      source: true